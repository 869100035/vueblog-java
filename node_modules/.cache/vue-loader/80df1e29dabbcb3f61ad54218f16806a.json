{"remainingRequest":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/src/views/ConTypeEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/src/views/ConTypeEdit.vue","mtime":1640757452803},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWFkZXIgZnJvbSAiLi4vY29tcG9uZW50cy9IZWFkZXIiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQge3BhcmFtfSBmcm9tICIuLi91dGlscyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQmxvZ0VkaXQudnVlIiwKICBjb21wb25lbnRzOiB7SGVhZGVyfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcnVsZUZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgdGl0bGU6ICcnLAogICAgICAgIGNvbk1vbmV5OiAnJywKICAgICAgICByZW1hcms6JycsCiAgICAgICAgY29uVHlwZTonJywKICAgICAgICBjb25UaW1lOicnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgIH0sCiAgICAgIGRhdGFMaXN0OiBbXSwKICAgICAgbGlzdFN1Ym1pdDogdHJ1ZSwgLy8g57G75Z6L5ZCN5qCh6aqM5qCH5b+XCiAgICAgIGlzQWRkU3RyZWV0OiB0cnVlLCAvLyB0cnVl6KGo56S65piv5re75Yqg6KGX6YGT5pWw5o2u77yMZmFsc2XooajnpLrmt7vliqDnmoTmmK/npL7ljLrlt6XkvZznq5nnmoTmlbDmja4KICAgICAgc3RyZWV0TmFtZU9yQ29tbXVuaXR5TmFtZTogJycsIC8vIOa3u+WKoOeahOaXtuWAmeeUqOS6juS/neWtmOihl+mBk+eahOWQjeensOiOt+WPluekvuWMuuW3peS9nOermeeahOWQjeensAogICAgICBpc0VkaXRTdHJlZXQ6IGZhbHNlLCAvLyDnvJbovpHooZfpgZMKICAgICAgZGlhbG9nVmlzaWJsZTpmYWxzZSwKICAgICAgZGVsSW5kZXg6JycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CgogICAgaGFuZGxlU2hvd0RpYWxvZyAoZmxhZykgewogICAgICB0aGlzLmRhdGFMaXN0LnB1c2goe30pCiAgICAgIHRoaXMuaXNFZGl0U3RyZWV0ID0gdHJ1ZQogICAgIH0KICAsCiAgICB1cGRhdGVDb25UeXBlICgpIHsKICAgICAgdGhpcy5kYXRhTGlzdC5mb3JFYWNoKGNvblR5cGUgPT4gewogICAgICAgIGNvbnNvbGUubG9nKGNvblR5cGUpCiAgICAgIH0pCgogIH0sCiAgLy/liKDpmaTmiafooYwKICBkZWxDb25UeXBlRXhjdXRlKCl7CiAgICAgIGNvbnNvbGUubG9nKCLmiafooYzliKDpmaQiK3RoaXMuZGVsSW5kZXgpCiAgICAgIHRoaXMuZGF0YUxpc3Quc3BsaWNlKHRoaXMuZGVsSW5kZXgsMSkKICAgICAgdGhpcy5kZWxJbmRleD0nJwogICAgICB0aGlzLmRpYWxvZ1Zpc2libGU9ZmFsc2UKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRhTGlzdCkKICB9LAogIC8v5Yig6Zmk5b2T5YmN57G75Yir5by556qXCiAgZGVsQ29uVHlwZShjb25JbmRleCl7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZT10cnVlOwogICAgICB0aGlzLmRlbEluZGV4PWNvbkluZGV4OwogICAgICBjb25zb2xlLmxvZygi5re75Yqg5Yiw5YWo5bGAIit0aGlzLmRlbEluZGV4KQogIH0sCiAgaGFuZGxlQmVmb3JlQ2xvc2UgKGRvbmUpIHsKICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICBkb25lKCkKICB9LAogIGhhbmRsZUVkaXRTdHJlZXQgKCkgewogICAgdGhpcy5pc0VkaXRTdHJlZXQgPSB0cnVlCiAgfSwKICBoYW5kbGVTYXZlU3RyZWV0ICgpIHsKICAgIHRoaXMuZGF0YUxpc3QuZm9yRWFjaChjb25UeXBlID0+IHsKICAgICAgY29uc3QgdHlwZU5hbWUgPSBjb25UeXBlLnR5cGVOYW1lCiAgICAgIGlmICh0eXBlTmFtZSA9PSBudWxsIHx8IHR5cGVOYW1lID09ICcnIHx8IHR5cGVOYW1lID09IHVuZGVmaW5lZCl7CiAgICAgICAgdGhpcy5saXN0U3VibWl0ID0gZmFsc2U7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICB9KQogICAgaWYgKCF0aGlzLmxpc3RTdWJtaXQpewogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YUxpc3QpCiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuWtmOWcqOexu+Wei+WQjeS4uuepuiIpOwogICAgICAgIHRoaXMubGlzdFN1Ym1pdCA9IHRydWU7Ly/ph43mlrDorr7nva7kuLrlj6/mj5DkuqTnirbmgIEKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogICAgdGhpcy4kYXhpb3MucG9zdCgnL3VwZENvblR5cGUnLHRoaXMuZGF0YUxpc3QsewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAiQXV0aG9yaXphdGlvbiI6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICApLnRoZW4ocmVzID0+IHsKICAgICAgICB0aGlzLiRyb3V0ZXIuZ28oMCkKICAgIH0pCgogIH0sCiAgZW50ZXJTeXN0ZW0gKCkgewogICAgdGhpcy4kcm91dGVyLnB1c2goJy9kYXNoYm9hcmQnKQogIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBheGlvcy5nZXQoJy9jb25UeXBlTGlzdCcsewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgIkF1dGhvcml6YXRpb24iOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKQogICAgICAgIH0KICAgIH0pLnRoZW4oKHJlcyk9PnsKICAgICAgdmFyIHR5cGVNYXAgPSByZXMuZGF0YS5kYXRhOwogICAgICBmb3IgKHZhciB0eXBlQ2QgaW4gdHlwZU1hcCl7CiAgICAgIF90aGlzLmRhdGFMaXN0LnB1c2goe3R5cGVDZDogdHlwZUNkLCB0eXBlTmFtZTogdHlwZU1hcFt0eXBlQ2RdfSkKICAgICB9CiAgICB9KQoKICAgIGNvbnN0IGJsb2dJZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5ibG9nSWQKICAgIGNvbnNvbGUubG9nKGJsb2dJZCkKICAgIGNvbnN0IF90aGlzID0gdGhpcwogICAgaWYoYmxvZ0lkKSB7CiAgICAgIHRoaXMuJGF4aW9zLmdldCgnL2Jsb2cvJyArIGJsb2dJZCkudGhlbihyZXMgPT4gewogICAgICAgIGNvbnN0IGJsb2cgPSByZXMuZGF0YS5kYXRhCiAgICAgICAgX3RoaXMucnVsZUZvcm0uaWQgPSBibG9nLmlkCiAgICAgICAgX3RoaXMucnVsZUZvcm0udGl0bGUgPSBibG9nLnRpdGxlCiAgICAgICAgX3RoaXMucnVsZUZvcm0uZGVzY3JpcHRpb24gPSBibG9nLmRlc2NyaXB0aW9uCiAgICAgICAgX3RoaXMucnVsZUZvcm0uY29udGVudCA9IGJsb2cuY29udGVudAogICAgICB9KQogICAgfQoKICB9Cgp9Cgo="},{"version":3,"sources":["ConTypeEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"ConTypeEdit.vue","sourceRoot":"src/views","sourcesContent":["<template xmlns=\"http://www.w3.org/1999/html\">\n  <div>\n    <Header></Header>\n    <el-divider></el-divider>\n    <div class=\"content-wrapper\">\n       <div class=\"button-list\">\n         <el-button @click.stop=\"handleShowDialog(0)\" type=\"primary\" size=\"medium\" icon=\"el-icon-plus\" >添加类别</el-button>\n         <el-button @click.stop=\"handleEditStreet\" type=\"primary\" size=\"medium\" icon=\"el-icon-edit\" >编辑</el-button>\n         <el-button @click=\"handleSaveStreet\" type=\"primary\" size=\"medium\" icon=\"el-icon-setting\" >保存</el-button>\n       </div>\n       <el-divider></el-divider>\n       <div class=\"street-wrapper\">\n         <template v-for=\"(item, index) in dataList\">\n           <el-button class=\"el-button\" v-if=\"!isEditStreet\" round :key=\"index\" >{{item.typeName}}</el-button>\n           <el-input v-else-if=\"isEditStreet\" :key=\"index\" v-model=\"item.typeName\"\n                     style=\"width:300px;margin-right:5px;margin-bottom:5px;\">\n             <i slot=\"append\" @click=\"delConType(index)\" class=\"remove el-icon-remove\"></i>\n           </el-input>\n         </template>\n       </div>\n     </div>\n      <el-dialog\n              title=\"提示\"\n              :visible.sync=\"dialogVisible\"\n              width=\"30%\">\n<!--              :before-close=\"handleClose\">-->\n          <span>将同时删除该类别记录</span>\n          <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"delConTypeExcute()\">确 定</el-button>\n  </span>\n      </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Header from \"../components/Header\";\n  import axios from \"axios\";\n  import {param} from \"../utils\";\n  export default {\n    name: \"BlogEdit.vue\",\n    components: {Header},\n    data() {\n      return {\n        ruleForm: {\n          id: '',\n          title: '',\n          conMoney: '',\n          remark:'',\n          conType:'',\n          conTime:''\n        },\n        rules: {\n        },\n        dataList: [],\n        listSubmit: true, // 类型名校验标志\n        isAddStreet: true, // true表示是添加街道数据，false表示添加的是社区工作站的数据\n        streetNameOrCommunityName: '', // 添加的时候用于保存街道的名称获取社区工作站的名称\n        isEditStreet: false, // 编辑街道\n        dialogVisible:false,\n        delIndex:''\n      };\n    },\n    methods: {\n\n      handleShowDialog (flag) {\n        this.dataList.push({})\n        this.isEditStreet = true\n       }\n    ,\n      updateConType () {\n        this.dataList.forEach(conType => {\n          console.log(conType)\n        })\n\n    },\n    //删除执行\n    delConTypeExcute(){\n        console.log(\"执行删除\"+this.delIndex)\n        this.dataList.splice(this.delIndex,1)\n        this.delIndex=''\n        this.dialogVisible=false\n        console.log(this.dataList)\n    },\n    //删除当前类别弹窗\n    delConType(conIndex){\n        this.dialogVisible=true;\n        this.delIndex=conIndex;\n        console.log(\"添加到全局\"+this.delIndex)\n    },\n    handleBeforeClose (done) {\n      this.dialogVisible = false\n      done()\n    },\n    handleEditStreet () {\n      this.isEditStreet = true\n    },\n    handleSaveStreet () {\n      this.dataList.forEach(conType => {\n        const typeName = conType.typeName\n        if (typeName == null || typeName == '' || typeName == undefined){\n          this.listSubmit = false;\n          return;\n        }\n      })\n      if (!this.listSubmit){\n          console.log(this.dataList)\n        this.$message.error(\"存在类型名为空\");\n          this.listSubmit = true;//重新设置为可提交状态\n        return false;\n      }\n      this.$axios.post('/updConType',this.dataList,{\n              headers: {\n                  \"Authorization\": localStorage.getItem(\"token\")\n              }\n          }\n      ).then(res => {\n          this.$router.go(0)\n      })\n\n    },\n    enterSystem () {\n      this.$router.push('/dashboard')\n    }\n    },\n    created() {\n      axios.get('/conTypeList',{\n          headers: {\n              \"Authorization\": localStorage.getItem(\"token\")\n          }\n      }).then((res)=>{\n        var typeMap = res.data.data;\n        for (var typeCd in typeMap){\n        _this.dataList.push({typeCd: typeCd, typeName: typeMap[typeCd]})\n       }\n      })\n\n      const blogId = this.$route.params.blogId\n      console.log(blogId)\n      const _this = this\n      if(blogId) {\n        this.$axios.get('/blog/' + blogId).then(res => {\n          const blog = res.data.data\n          _this.ruleForm.id = blog.id\n          _this.ruleForm.title = blog.title\n          _this.ruleForm.description = blog.description\n          _this.ruleForm.content = blog.content\n        })\n      }\n\n    }\n\n  }\n\n</script>\n\n<style scoped>\n  .el-button{\n    margin-top: 3px;\n    margin-left: 10px;\n  }\n  .content-wrapper{\n    text-align: center;\n  }\n  .remove{\n    color: red;\n  }\n</style>\n"]}]}