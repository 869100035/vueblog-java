{"remainingRequest":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/src/views/ConTypeEdit.vue?vue&type=style&index=0&id=3a3da688&scoped=true&lang=css&","dependencies":[{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/src/views/ConTypeEdit.vue","mtime":1640757452803},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhangliang/vueWorkspace/vueblog/vueblog-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1idXR0b257CiAgbWFyZ2luLXRvcDogM3B4OwogIG1hcmdpbi1sZWZ0OiAxMHB4Owp9Ci5jb250ZW50LXdyYXBwZXJ7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5yZW1vdmV7CiAgY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["ConTypeEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConTypeEdit.vue","sourceRoot":"src/views","sourcesContent":["<template xmlns=\"http://www.w3.org/1999/html\">\n  <div>\n    <Header></Header>\n    <el-divider></el-divider>\n    <div class=\"content-wrapper\">\n       <div class=\"button-list\">\n         <el-button @click.stop=\"handleShowDialog(0)\" type=\"primary\" size=\"medium\" icon=\"el-icon-plus\" >添加类别</el-button>\n         <el-button @click.stop=\"handleEditStreet\" type=\"primary\" size=\"medium\" icon=\"el-icon-edit\" >编辑</el-button>\n         <el-button @click=\"handleSaveStreet\" type=\"primary\" size=\"medium\" icon=\"el-icon-setting\" >保存</el-button>\n       </div>\n       <el-divider></el-divider>\n       <div class=\"street-wrapper\">\n         <template v-for=\"(item, index) in dataList\">\n           <el-button class=\"el-button\" v-if=\"!isEditStreet\" round :key=\"index\" >{{item.typeName}}</el-button>\n           <el-input v-else-if=\"isEditStreet\" :key=\"index\" v-model=\"item.typeName\"\n                     style=\"width:300px;margin-right:5px;margin-bottom:5px;\">\n             <i slot=\"append\" @click=\"delConType(index)\" class=\"remove el-icon-remove\"></i>\n           </el-input>\n         </template>\n       </div>\n     </div>\n      <el-dialog\n              title=\"提示\"\n              :visible.sync=\"dialogVisible\"\n              width=\"30%\">\n<!--              :before-close=\"handleClose\">-->\n          <span>将同时删除该类别记录</span>\n          <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"dialogVisible = false\">取 消</el-button>\n    <el-button type=\"primary\" @click=\"delConTypeExcute()\">确 定</el-button>\n  </span>\n      </el-dialog>\n  </div>\n</template>\n\n<script>\n  import Header from \"../components/Header\";\n  import axios from \"axios\";\n  import {param} from \"../utils\";\n  export default {\n    name: \"BlogEdit.vue\",\n    components: {Header},\n    data() {\n      return {\n        ruleForm: {\n          id: '',\n          title: '',\n          conMoney: '',\n          remark:'',\n          conType:'',\n          conTime:''\n        },\n        rules: {\n        },\n        dataList: [],\n        listSubmit: true, // 类型名校验标志\n        isAddStreet: true, // true表示是添加街道数据，false表示添加的是社区工作站的数据\n        streetNameOrCommunityName: '', // 添加的时候用于保存街道的名称获取社区工作站的名称\n        isEditStreet: false, // 编辑街道\n        dialogVisible:false,\n        delIndex:''\n      };\n    },\n    methods: {\n\n      handleShowDialog (flag) {\n        this.dataList.push({})\n        this.isEditStreet = true\n       }\n    ,\n      updateConType () {\n        this.dataList.forEach(conType => {\n          console.log(conType)\n        })\n\n    },\n    //删除执行\n    delConTypeExcute(){\n        console.log(\"执行删除\"+this.delIndex)\n        this.dataList.splice(this.delIndex,1)\n        this.delIndex=''\n        this.dialogVisible=false\n        console.log(this.dataList)\n    },\n    //删除当前类别弹窗\n    delConType(conIndex){\n        this.dialogVisible=true;\n        this.delIndex=conIndex;\n        console.log(\"添加到全局\"+this.delIndex)\n    },\n    handleBeforeClose (done) {\n      this.dialogVisible = false\n      done()\n    },\n    handleEditStreet () {\n      this.isEditStreet = true\n    },\n    handleSaveStreet () {\n      this.dataList.forEach(conType => {\n        const typeName = conType.typeName\n        if (typeName == null || typeName == '' || typeName == undefined){\n          this.listSubmit = false;\n          return;\n        }\n      })\n      if (!this.listSubmit){\n          console.log(this.dataList)\n        this.$message.error(\"存在类型名为空\");\n          this.listSubmit = true;//重新设置为可提交状态\n        return false;\n      }\n      this.$axios.post('/updConType',this.dataList,{\n              headers: {\n                  \"Authorization\": localStorage.getItem(\"token\")\n              }\n          }\n      ).then(res => {\n          this.$router.go(0)\n      })\n\n    },\n    enterSystem () {\n      this.$router.push('/dashboard')\n    }\n    },\n    created() {\n      axios.get('/conTypeList',{\n          headers: {\n              \"Authorization\": localStorage.getItem(\"token\")\n          }\n      }).then((res)=>{\n        var typeMap = res.data.data;\n        for (var typeCd in typeMap){\n        _this.dataList.push({typeCd: typeCd, typeName: typeMap[typeCd]})\n       }\n      })\n\n      const blogId = this.$route.params.blogId\n      console.log(blogId)\n      const _this = this\n      if(blogId) {\n        this.$axios.get('/blog/' + blogId).then(res => {\n          const blog = res.data.data\n          _this.ruleForm.id = blog.id\n          _this.ruleForm.title = blog.title\n          _this.ruleForm.description = blog.description\n          _this.ruleForm.content = blog.content\n        })\n      }\n\n    }\n\n  }\n\n</script>\n\n<style scoped>\n  .el-button{\n    margin-top: 3px;\n    margin-left: 10px;\n  }\n  .content-wrapper{\n    text-align: center;\n  }\n  .remove{\n    color: red;\n  }\n</style>\n"]}]}